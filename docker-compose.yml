version: '3.7'

services:


  #command: bash -c "flask init-db"



  postgresql:
    image: postgres
    environment:
      - POSTGRES_DB=prophy
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  init_db:
      build:
        context: .
        dockerfile: ./Dockerfile
      command: bash -c "sleep 15 && flask init-db"
      container_name: prophy_init
      environment:
        - FLASK_APP=src
      depends_on:
      - redis
      - postgresql

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    # to make server accessible from browser add "-h 0.0.0.0"
    command: bash -c "flask run -h 0.0.0.0"
    restart: always
    container_name: prophy
    environment:
      - FLASK_APP=src
      #- FLASK_ENV=development
      - REDIS_URL=redis://redis
    volumes:
      - .:/prophy/
      - py_wheels:/root/.cache/pip/wheels
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - postgresql
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "1"
          memory: 768M
        reservations:
          memory: 512M

  celery:
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      - C_FORCE_ROOT=true
      - REDIS_URL=redis://redis
    command: bash -c "celery -A src.tasks.run_celery.celery worker --loglevel INFO"
    restart: unless-stopped
    volumes:
      - .:/prophy/
      - py_wheels:/root/.cache/pip/wheels
    depends_on:
      - redis
      - postgresql
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "0.75"
          memory: 512M
        reservations:
          memory: 256M



  redis:
    image: redis
    container_name: redis
    # expose only for internal docker network
    #    expose:
    #      - 6379
    ports:
      - "6379:6379"


  flower:
    image: mher/flower
    command: ["flower", "--broker=redis://redis:6379", "--address=0.0.0.0", "--port=8888"]
    ports:
      - "8888:8888"
    depends_on:
      - redis


volumes:
  db:
    driver: local
  py_wheels:
    driver: local

